<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:Iomonitor"
                    xmlns:resources="clr-namespace:Iomonitor.Resources"
                    xmlns:models="clr-namespace:Iomonitor.Models">
    <ContextMenu
        x:Shared="false"
        x:Key="SysTrayMenu">
        <MenuItem
            Header="{Binding [only_internal_monitor], Source={x:Static resources:LanguageManager.Instance}}"
            Command="{Binding SetMonitorInternalCommand}"/>
        <MenuItem
            Header="{Binding [clone], Source={x:Static resources:LanguageManager.Instance}}"
            Command="{Binding SetMonitorCloneCommand}"/>
        <MenuItem
            Header="{Binding [extend], Source={x:Static resources:LanguageManager.Instance}}"
            Command="{Binding SetMonitorExtendCommand}"/>
        <MenuItem
            Header="{Binding [only_external_monitor], Source={x:Static resources:LanguageManager.Instance}}"
            Command="{Binding SetMonitorExternalCommand}"/>
        <Separator/>
        <MenuItem
            Header="{Binding [cursor_locked], Source={x:Static resources:LanguageManager.Instance}}"
            IsCheckable="True"
            IsChecked="{Binding Source={x:Static models:UserSettings.Instance}, Path=CursorLocked}"/>
        <Separator/>
        <MenuItem
            Header="{Binding [exit], Source={x:Static resources:LanguageManager.Instance}}"
            Command="{Binding ExitApplicationCommand}"
            />
    </ContextMenu>


    <!--  the application's NotifyIcon - started from App.xaml.cs. Declares its own view model.  -->
    <tb:TaskbarIcon
        x:Key="NotifyIcon"
        IconSource="pack://application:,,,/Assets/iomonitor.ico"
        ToolTipText="Iomonitor"
        LeftClickCommand="{Binding ShowWindowCommand}"
        NoLeftClickDelay="True"
        ContextMenu="{StaticResource SysTrayMenu}"
        >

        <!--  self-assign a data context (could also be done programmatically)  -->
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>